  #-----------------------------------------------------------------------
  # control logic
  #-----------------------------------------------------------------------

    @s.combinational
    def control_logic():
  
  #-----------------------------------------------------------------------
  # routing algorithm
  
      if (int0_deq_val == 1):
        s.in_reqs0.value = 1
      else: 
        s.in_reqs0.value = 0
      
      if (int1_deq_val == 1):
        s.in_reqs1.value = 1
      else:
        s.in_reqs1.value = 0
      
      if (int2_deq_val == 1):
        s.in_reqs2.value = 1
      else:
        s.in_reqs2.value = 0
  #------------------------------------------------------------------------

  
  # set input rdy signal

      s.in0_deq_rdy.value = 1
      s.in1_deq_rdy.value = 1
      s.in1_deq_rdy.value = 1
      
      # if deq is valid, but arbiters don't grant the privilege or output is not ready, then deq not ready
      
      if ((s.in_reqs0 != 0) & (s.in_grants0 == 0)):
        s.in0_deq_rdy.value = 0

      if ((s.in_reqs0 != 0) & (s.in_grants1 == 0)):
        s.in1_deq_rdy.value = 0

      if ((s.in_reqs2 != 0) & (s.in_grants2 == 0)):
        s.in2_deq_rdy.value = 0

  # set select signal and output val signal 

      if (s.out0_rdy == 0):
        s.out_grants0.value = 0
      
      # does the value of out_grants0 change if rdy is 1?
      elif (s.out_grants0 != 0):
        s.out0_val.value = 1
        for i in xrange (3):
          if (s.out_grants0[i] == 1):
            s.xbar_sel0.value = i
      
      if (s.out1_rdy == 0):
        s.out_grants1.value = 0
      elif (s.out_grants1 != 0):
        s.out1_val.value = 1
        for i in xrange (3):
          if (s.out_grants1[i] == 1):
            s.xbar_sel1.value = i
            
      if (s.out2_rdy == 0):
        s.out_grants2.value = 0
      elif (s.out_grants != 0):
        s.out2_val.value = 1
        for i in xrange (3):
          if (s.out_grants2[i] == 1):
            s.xbar_sel2.value = i

